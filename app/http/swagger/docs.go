// Package swagger GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package swagger

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/swaggo/swag",
        "contact": {
            "name": "choi",
            "email": "choi"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/answer/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建回答",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qa"
                ],
                "summary": "创建回答",
                "parameters": [
                    {
                        "description": "创建回答参数",
                        "name": "answerCreateParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/qa.answerCreateParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "操作成功",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/answer/delete": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建回答",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qa"
                ],
                "summary": "创建回答",
                "parameters": [
                    {
                        "description": "删除id",
                        "name": "answerDeleteParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/qa.answerDeleteParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "操作成功",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/demo/demo": {
            "get": {
                "description": "获取所有用户",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "demo"
                ],
                "summary": "获取所有用户",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/demo.UserDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/demo/demo2": {
            "get": {
                "description": "获取所有学生,不进行分页",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "demo"
                ],
                "summary": "获取所有学生",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/demo.UserDTO"
                            }
                        }
                    }
                }
            }
        },
        "/question/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建问题",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qa"
                ],
                "summary": "创建问题",
                "parameters": [
                    {
                        "description": "创建问题参数",
                        "name": "questionCreateParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/qa.questionCreateParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "操作成功",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/question/delete": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除问题，同时删除问题中的所有答案",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qa"
                ],
                "summary": "删除问题",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "删除id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "操作成功",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/question/detail": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取问题详情，包括问题的所有回答",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qa"
                ],
                "summary": "获取问题详情",
                "parameters": [
                    {
                        "description": "问题id",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/qa.questionDetailParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "问题详情，带回答和作者",
                        "schema": {
                            "type": "QuestionDTO"
                        }
                    }
                }
            }
        },
        "/question/edit": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "编辑问题",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qa"
                ],
                "summary": "编辑问题",
                "parameters": [
                    {
                        "description": "编辑问题参数",
                        "name": "questionEditParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/qa.questionEditParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "操作成功",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "用户登录接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "description": "login with param",
                        "name": "loginParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.loginParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "调用表示用户登出",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "用户登出",
                "responses": {
                    "200": {
                        "description": "用户登出成功",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/preregister": {
            "get": {
                "description": "用户预注册接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "用户预注册，获取邮箱验证码",
                "parameters": [
                    {
                        "description": "预注册参数",
                        "name": "ValidateCodeGetParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.ValidateCodeGetParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "预注册成功",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "用户注册接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "用户注册",
                "parameters": [
                    {
                        "description": "注册参数",
                        "name": "registerParam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.registerParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "demo.UserDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "qa.answerCreateParam": {
            "type": "object",
            "required": [
                "context",
                "question_id"
            ],
            "properties": {
                "context": {
                    "type": "string"
                },
                "question_id": {
                    "type": "integer"
                }
            }
        },
        "qa.answerDeleteParam": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "qa.questionCreateParam": {
            "type": "object",
            "required": [
                "content",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "qa.questionDetailParam": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "qa.questionEditParam": {
            "type": "object",
            "required": [
                "content",
                "id",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "user.ValidateCodeGetParam": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "user.loginParam": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.registerParam": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username",
                "validate_code"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "validate_code": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "zhihu",
	Description: "zhihu测试",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
